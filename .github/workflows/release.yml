# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Publish Release to NPM

on:
  release:
    types: [published]

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/cache@v1.1.0
        with:
          path: IPTech-Coroutines/Library
          key: Library-IPTech-Coroutines
          restore-keys: |
            Library-
      - uses: webbertakken/unity-test-runner@v1.7
        id: tests
        with:
          projectPath: IPTech-Coroutines
          unityVersion: 2018.3.14f1
          testMode: all
          artifactsPath: all-artifacts
      - uses: actions/upload-artifact@v1
        with:
          name: Test results for all
          path: ${{ steps.tests.outputs.artifactsPath }}

  publish-npm:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'
    strategy:
      fail-fast: true
      matrix:
        packageName:
          - IPTech.Coroutines
          - IPTech.Coroutines.Examples
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - run: npm publish --access public
        working-directory: ./IPTech-Coroutines/Assets/${{ matrix.packageName }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  #publish-gpr:
  #  needs: build
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v2
  #    - uses: actions/setup-node@v1
  #      with:
  #        node-version: 12
  #        registry-url: https://npm.pkg.github.com/
  #    - run: npm ci
  #    - run: npm publish
  #      env:
  #        NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
